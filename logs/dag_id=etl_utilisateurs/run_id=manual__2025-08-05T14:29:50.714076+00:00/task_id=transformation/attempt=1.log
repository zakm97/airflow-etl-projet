{"timestamp":"2025-08-05T14:29:52.581351","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-05T14:29:52.581774","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_utilisateurs.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-05T14:29:52.610352Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.610560Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.610661Z","level":"info","event":"Current task name:transformation","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.610697Z","level":"info","event":"Dag name:etl_utilisateurs","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.611931Z","level":"info","event":"ðŸ”§ Transformation des utilisateurs","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.615591","level":"warning","event":"/opt/airflow/dags/scripts/transformation.py:9: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_transforme.rename(columns={\"address.city\": \"ville\"}, inplace=True)\n","logger":"py.warnings"}
{"timestamp":"2025-08-05T14:29:52.616682","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-05T14:29:52.631779Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.631923Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-05T14:29:52.632147Z","level":"info","event":"Task operator:<Task(PythonOperator): transformation>","chan":"stdout","logger":"task"}
